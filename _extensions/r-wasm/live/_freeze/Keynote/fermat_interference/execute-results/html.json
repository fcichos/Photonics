{
  "hash": "6ca6e4c3f97fe8837f2190dbc8166e13",
  "result": {
    "engine": "jupyter",
    "markdown": "---\n#title: \"Theories of Light\"\njupyter: python3\nformat:\n  html:\n    toc: true\n    toc-location: right\n    fig-cap-location: bottom\ncrossref:\n  fig-title: Figure\n  tbl-title: Table\n  title-delim: \"—\"\n  fig-prefix: Figure\n  eq-prefix: Equation\n  chapters: true\n  fig-labels: arabic\n---\n\n\n\n::: {.callout-note collapse=\"true\"}\n### Destructive Interference of Non-Minimal Paths\nWe can demonstrate that all paths except the shortest one interfere destructively using Feynman's path integral formulation. In this approach, light takes all possible paths between points A and B, with each path contributing an amplitude with phase $e^{iS/\\hbar}$, where $S$ is the action proportional to the optical path length: $S = kL$ where $k = 2\\pi/\\lambda$ is the wave number.\n\nTo understand why non-minimal paths cancel out, let's denote the minimal path as $x_0(t)$ and nearby paths as $x_0(t) + \\delta x(t)$, where $\\delta x(t)$ represents small deviations. The action for these perturbed paths expands as:\n$$S[x_0 + \\delta x] = S[x_0] + \\frac{\\delta S}{\\delta x}\\bigg|_{x_0} \\delta x + \\frac{1}{2}\\frac{\\delta^2 S}{\\delta x^2}\\bigg|_{x_0} (\\delta x)^2 + ...$$\n\nSince $x_0$ is the extremal path (according to Fermat's principle), we have $\\frac{\\delta S}{\\delta x}\\bigg|_{x_0} = 0$. This means the first-order term vanishes, leaving the quadratic term as the leading contribution to the phase difference:\n\n$$\\Delta\\phi = S[x] - S[x_0] \\approx \\frac{1}{2}\\frac{\\delta^2 S}{\\delta x^2}\\bigg|_{x_0} (\\delta x)^2$$\n\nThis quadratic dependence is crucial: as we move away from the minimal path, the phase difference increases as the square of the deviation $\\delta x$. When we consider a specific deviation $\\delta x_c$ where $\\Delta\\phi = \\pi$, paths will contribute with exactly opposite phases compared to the minimal path, leading to destructive interference:\n\n$$\\frac{1}{2}\\frac{\\delta^2 S}{\\delta x^2}\\bigg|_{x_0} (\\delta x_c)^2 = \\pi$$\n\nFor even larger deviations, the phase differences continue to increase, creating alternating bands of constructive and destructive interference. When summed over all possible paths, these rapidly varying phases cancel each other out.\n\nFor paths far from the minimal one, the destructive interference is even more pronounced. Mathematically, we can demonstrate this by considering a continuous distribution of paths with optical path lengths $L$. The total amplitude contribution from these paths is given by:\n\n$$A = \\int e^{ikL(x)} dx$$\n\nFor non-minimal paths, we can parametrize the path length as $L(x) = L_0 + \\alpha(x-x_0)^2$ for some constant $\\alpha$, where $x_0$ corresponds to the minimal path. The amplitude becomes:\n\n$$A = \\int e^{ik(L_0 + \\alpha(x-x_0)^2)} dx = e^{ikL_0}\\int e^{ik\\alpha(x-x_0)^2} dx$$\n\nThis integral evaluates to:\n\n$$A = e^{ikL_0}\\sqrt{\\frac{\\pi}{k\\alpha}}e^{i\\pi/4}$$\n\nThe key insight is that the amplitude scales as $1/\\sqrt{k\\alpha}$, which means that as the curvature $\\alpha$ of the path length function increases (as happens far from the minimal path), the contribution to the total amplitude diminishes. This mathematically proves why non-minimal path regions contribute negligibly to the overall path integral.\n\nThis cancellation mechanism explains why light appears to follow only the path of least time in ray optics. The mathematics shows that constructive interference occurs only for paths very close to the minimal path, while all other paths destructively interfere with their neighbors. This phenomenon emerges naturally from wave properties without requiring quantum mechanical constants like ℏ. We can express this classically by setting $S = kL$ and observing how path differences relative to the wavelength create interference patterns.\n\n::: {#cell-fig-phase .cell execution_count=2}\n``` {.python .cell-code code-fold=\"true\"}\nfrom matplotlib import cm\n\n# Parameters\nnum_paths = 100\nmin_path_index = num_paths // 2\npath_deviation = np.linspace(-2, 2, num_paths)  # Deviation from minimal path\nalpha = 5  # Curvature parameter controlling phase variation rate\n\n# Calculate phase for each path (quadratic dependence on deviation)\nphases = alpha * path_deviation**2\n\n# Set up the figure\nfig, ax = plt.subplots(figsize=get_size(14, 8))\n\n# Plot phase vs path deviation with a simple blue line and points\nax.plot(path_deviation, phases, '-', color='blue', linewidth=2)\n\n# Highlight the minimal path\nax.axvline(x=0, color='r', linestyle='--', linewidth=2, label='Minimal path')\n\n# Highlight paths near minimal path\nnear_minimal = np.abs(path_deviation) < 0.3\n#ax.scatter(path_deviation[near_minimal], phases[near_minimal],\n#          color='green', s=70, label='Near minimal path', zorder=3)\n\n# Set labels and grid\nax.set_xlabel('path deviation')\nax.set_ylabel('phase [rad]')\n\n\n# Add horizontal lines at multiples of π to show constructive/destructive interference\nfor i in range(int(np.max(phases)/np.pi) + 1):\n    if i == 0:\n        ax.axhline(y=i*np.pi, color='k', linestyle='-', alpha=0.2,\n                  label='Constructive interference')\n    elif i % 2 == 0:\n        ax.axhline(y=i*np.pi, color='k', linestyle='-', alpha=0.2)\n    else:\n        ax.axhline(y=i*np.pi, color='k', linestyle='--', alpha=0.2,\n                  label='Destructive interference' if i==1 else None)\n\nplt.tight_layout()\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Visualization of path phases in Fermat's principle. The figure shows how the phase varies with path deviation from the minimal path (marked by the vertical red line at zero). The quadratic relationship between phase and path deviation demonstrates why paths near the minimal one constructively interfere (similar phases), while non-minimal paths tend to cancel through destructive interference (rapidly varying phases).](fermat_interference_files/figure-html/fig-phase-output-1.svg){#fig-phase}\n:::\n:::\n\n\n:::\n\n",
    "supporting": [
      "fermat_interference_files"
    ],
    "filters": [],
    "includes": {}
  }
}