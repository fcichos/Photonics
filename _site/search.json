[
  {
    "objectID": "lectures/lecture01/02-lecture01.html",
    "href": "lectures/lecture01/02-lecture01.html",
    "title": "Optical Elements Part II",
    "section": "",
    "text": "Code\nbk7=pd.read_csv(\"data/BK7.csv\",delimiter=\",\")\nsf10=pd.read_csv(\"data/SF10.csv\",delimiter=\",\")\nfk51a=pd.read_csv(\"data/FK51A.csv\",delimiter=\",\")\nplt.figure(figsize=(4,4))\nplt.plot(bk7.wl*1000,bk7.n,label=\"BK7\")\nplt.plot(sf10.wl*1000,sf10.n,label=\"SF10\")\nplt.plot(fk51a.wl*1000,fk51a.n,label=\"FK51A\")\nplt.xlim(300,900)\nplt.xlabel(\"wavelength [nm]\")\nplt.ylabel(\"refractive index n\")\nplt.legend()\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1— Refractive index of different glasses as a function of the wavelength."
  },
  {
    "objectID": "lectures/lecture01/02-lecture01.html#prism",
    "href": "lectures/lecture01/02-lecture01.html#prism",
    "title": "Optical Elements Part II",
    "section": "",
    "text": "Prisms are wedge-shaped optical elements made of a transparent material, such as glass. A special form of such a prism is an isosceles prism with two sides of equal length. The two equal sides enclose an angle \\(\\gamma\\), known as the apex angle of the prism. When light passes through this prism, it undergoes refraction twice.\nFirst, the incident angle \\(\\alpha_1\\) is changed into a refracted angle \\(\\beta_1\\) as the light enters the prism. This refracted ray then hits the second interface at an angle \\(\\beta_2\\), leading to a second refraction as it exits the prism at an angle \\(\\alpha_2\\).\nOf particular interest is the total deflection of the incident ray, which is measured by the angle \\(\\delta\\). This deflection angle represents the difference between the final outgoing angle \\(\\alpha_2\\) and the initial incident angle \\(\\alpha_1\\).\nUnderstanding how this deflection angle changes based on the prism’s properties and the incident angle is crucial in various optical applications. In the following sections, we will explore how to calculate this deflection angle and examine its dependence on different parameters.\n\n\n\n\n\n\nFigure 1— Refraction of rays on a prism.\n\n\n\n\n\n\nWe can calculate the deflection angle \\(\\delta\\) from a number of considerations. First consider the following relations between the angles in the prism and Snell’s law\n\\[\\beta_1=\\sin^{-1}\\left (\\frac{n_0}{n_1}\\sin(\\alpha_1) \\right)\\] \\[\\beta_2=\\gamma-\\beta_1\\] \\[\\alpha_2=\\sin^{-1}\\left (\\frac{n_1}{n_0}\\sin(\\beta_2)\\right )\\] \\[\\theta_2=\\alpha_2-\\gamma\\]\nwhere \\(\\theta_2\\) is the angle between the incident surface normal and the outgoing ray. The total deflection angle \\(\\delta\\) is then\n\\[\\delta =\\alpha_1-\\beta_1+\\alpha_2-\\beta_2\\]\nor\n\\[\\delta =\\alpha_1+\\alpha_2-\\gamma\\]\nfrom which we obtain\n\\[\\delta=\\alpha_1+\\sin^{-1}\\left (\\frac{n_1}{n_0}\\sin\\left [\\gamma-\\sin^{-1}\\left (\\frac{n_0}{n_1}\\sin(\\alpha_1) \\right)\\right]\\right )-\\gamma\\]\nas the deflection angle.\n\n\nCode\ndef deflection(alpha_1,gamma,n0,n1):\n    g=gamma*np.pi/180\n    return(alpha_1+np.arcsin(n1*np.sin(g-np.arcsin(n0*np.sin(alpha_1)/n1))))-g\n\na_1=np.linspace(0.1,np.pi/2,100)\nplt.figure(figsize=(4,4))\nplt.plot(a_1*180/np.pi,deflection(a_1,45,1,1.5)*180/np.pi,label=r\"$\\gamma=45$ °\")\nplt.plot(a_1*180/np.pi,deflection(a_1,30,1,1.5)*180/np.pi,label=r\"$\\gamma=30$ °\")\nplt.plot(a_1*180/np.pi,deflection(a_1,10,1,1.5)*180/np.pi,label=r\"$\\gamma=10$ °\")\nplt.xlabel(r\"incindence angle $\\alpha_1$ [°]\")\nplt.ylabel(r\"deflection angle $\\delta$ [°]\")\nplt.legend()\nplt.show()\n\n\n\n\n\n\n\n\nFigure 2— Deflection angle as a function of the incidence angle for different prism angles.\n\n\n\n\n\n\n\n\nIf we now would like to know how the deflection angle changes with the incident angle \\(\\alpha_1\\), we calculate the derivative of the deflection angle \\(\\delta\\) with respect to \\(\\alpha_1\\), i.e.,\n\\[\\frac{\\mathrm d\\delta}{\\mathrm d\\alpha_1}=1+\\frac{\\mathrm d\\alpha_2}{\\mathrm d \\alpha_1}.\\]\nWe are here especially interested in the case, where this change in deflection is reaching a minimum, i.e., \\(\\mathrm d\\delta/\\mathrm d\\alpha_1 =0\\). This readily yields\n\\[\\mathrm d \\alpha_2=-\\mathrm d\\alpha_1.\\]\nThis means a change in the incidence angle \\(\\mathrm d\\alpha_1\\) yields an opposite change in the outgoing angle \\(-\\mathrm d\\alpha_2\\). We may later observe that in the experiment.\nAs both, the incident and the outgoing angle are related to each other by Snells’s law, we may introduce the derivatives of Snell’s law for both interfaces, e.g.,\n\n\\(\\cos(\\alpha_1)\\mathrm d\\alpha_1=n\\cos(\\beta_1)\\mathrm d\\beta_1\\)\n\\(\\cos(\\alpha_2)\\mathrm d\\alpha_2=n\\cos(\\beta_2)\\mathrm d\\beta_2\\)\n\nwhere \\(n\\) is the refractive index of the prism material and the material outside is air (\\(n_{\\rm air}=1\\)). Replacing \\(\\cos(\\alpha)=\\sqrt{1-\\sin^2(\\alpha)}\\) and dividing the two previous equations by each other readily yields\n\\[\\frac{1-\\sin^2(\\alpha_1)}{1-\\sin^2(\\alpha_2)}=\\frac{n^2-\\sin^2(\\alpha_1)}{n^2-\\sin^2(\\alpha_2)}.\\]\nThe latter equation is for \\(n\\neq 1\\) only satisfied if \\(\\alpha_1=\\alpha_2=\\alpha\\). In this case, the light path through the prism must be symmetric and we may write down the minimum deflection angle \\(\\delta_{\\rm min}\\):\n\n\n\n\n\n\nMinimum prism deflection\n\n\n\nThe minimum deflection angle of an isosceles prism with a prism angle \\(\\gamma\\) is given by\n\\[\\delta_{\\rm min}=2\\alpha-\\gamma.\\]\n\n\nGiven this minimum deflection angle \\(\\delta_{\\rm min}\\) and the properties of the prism, we may also write down Snell’s law using \\(\\sin(\\alpha)=n\\sin(\\beta)\\), which results in\n\\[\\sin \\left ( \\frac{\\delta_{\\rm min}+\\gamma}{2}\\right )=n\\sin\\left (\\frac{\\gamma}{2}\\right).\\]\nwhich indicates the dependence of the deflection in the refractive index \\(n\\) of the prism material.\n\n\n\nVery important applications now arise from the fact, that the refractive index is a material property, which depends on the color (frequency or wavelength) of light. We do not yet understand the origin of this dependence. The plots below show the wavelength dependence of three different glasses. You may find much more data on the refractive index of different materials in an online database.\n\n\nCode\nbk7=pd.read_csv(\"data/BK7.csv\",delimiter=\",\")\nsf10=pd.read_csv(\"data/SF10.csv\",delimiter=\",\")\nfk51a=pd.read_csv(\"data/FK51A.csv\",delimiter=\",\")\nplt.figure(figsize=(4,4))\nplt.plot(bk7.wl*1000,bk7.n,label=\"BK7\")\nplt.plot(sf10.wl*1000,sf10.n,label=\"SF10\")\nplt.plot(fk51a.wl*1000,fk51a.n,label=\"FK51A\")\nplt.xlim(300,900)\nplt.xlabel(\"wavelength [nm]\")\nplt.ylabel(\"refractive index n\")\nplt.legend()\nplt.show()\n\n\n\n\n\n\n\n\nFigure 3— Refractive index of different glasses as a function of the wavelength.\n\n\n\n\n\n\n\nCode\nbk7=pd.read_csv(\"data/BK7.csv\",delimiter=\",\")\na_1=np.linspace(0.15,np.pi/2,100)\nplt.figure(figsize=(7.5,4))\nplt.subplot(1,2,1)\nfor wl in np.linspace(0.400,0.700,100):\n    n1=np.interp(wl,bk7.wl,bk7.n)\n    c=wavelength_to_rgb(wl*1000, gamma=0.8)\n    plt.plot(a_1*180/np.pi,deflection(a_1,45,1,n1)*180/np.pi,color=c)\n\nplt.xlabel(r\"incindence angle $\\alpha_1$ [°]\")\nplt.ylabel(r\"deflection angle $\\delta$ [°]\")\n\n\nplt.subplot(1,2,2)\nfor wl in np.linspace(0.400,0.700,100):\n    n1=np.interp(wl,bk7.wl,bk7.n)\n    c=wavelength_to_rgb(wl*1000, gamma=0.8)\n    plt.plot(a_1*180/np.pi,deflection(a_1,45,1,n1)*180/np.pi,color=c)\n\nplt.xlabel(r\"incindence angle $\\alpha_1$ [°]\")\nplt.ylabel(r\"deflection angle $\\delta$ [°]\")\nplt.xlim(30,45)\nplt.ylim(25,30)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nFigure 4— Deflection angle as a function of the incidence angle for different wavelengths.\n\n\n\n\n\nThe plots have a general feature, which is that the refractive index is largest at small wavelength (blue colors), while it drops continuously with increasing wavelength towards the red (800 nm). If you would characterize the dependence by the slope, i.e., \\(\\mathrm dn/\\mathrm d\\lambda\\) then all displayed curves show in the visible range\n\n\\(\\frac{\\mathrm dn}{\\mathrm d\\lambda}&lt;0\\), is called normal dispersion\n\nwhile\n\n\\(\\frac{\\mathrm dn}{\\mathrm d\\lambda}&gt;0\\), is called anomalous dispersion\n\nThis wavelength dependence of the refractive index will yield a dependence of the deflection angle on the color of light as well. The change of the deflection angle with the refractive index can be calculated to be\n\\[\\frac{\\mathrm d\\delta}{\\mathrm d n}=\\frac{2\\sin(\\gamma/2)}{\\sqrt{1-n^2\\sin^2(\\gamma/2)}}\\]\ntogether with the relation\n\\[\\frac{\\mathrm d \\delta}{\\mathrm d \\lambda}=\\frac{\\mathrm d\\delta}{\\mathrm d n}\\frac{\\mathrm d n}{\\mathrm d\\lambda}\\]\nwe obtain\n\\[\\frac{\\mathrm d\\delta}{\\mathrm d\\lambda}=\\frac{2\\sin(\\gamma/2)}{\\sqrt{1-n^2\\sin^2(\\gamma/2)}}\\frac{\\mathrm d n}{\\mathrm d \\lambda}.\\]\nThe refraction of white light through a prism splits the different colors composing white light spatially into a colored spectrum. In this process, light with the longest wavelength (red) is deflected the least, while light with the shortest wavelength (violet) is deflected the most. This occurs because the refractive index of the prism material varies with wavelength, a phenomenon known as dispersion.\n\n\n\n\n\n\nFigure 5— Spectrum as created by a prism in the lecture.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Spectrum\n\n\n\n\n\n\n\n\n\n\n\n(b) Prism\n\n\n\n\n\n\n\nFigure 6— Deflection of different wavelengths of light in a prism with normal dispersion.\n\n\n\n\n\n\nThis wavelength-dependent refraction is crucial as it forms the basis for spectroscopy, a powerful analytical technique that measures and records the intensity of light as a function of wavelength. Spectroscopy allows scientists to analyze the composition and properties of matter by examining its interaction with light across different wavelengths.\n\n\n\n\n\n\n\n\n\n\n\n(a) Principle of a prism spectrometer\n\n\n\n\n\n\n\n\n\n\n\n(b) Technical realization of a prism spectrometer\n\n\n\n\n\n\n\nFigure 7— Principle and technical realization of a prism spectrometer.\n\n\n\nDIY prism\nIf you don’t have a prism at home (which most people don’t), you can create a simple substitute using a mirror and a basin of water. Here’s how:\n\nPlace a mirror in a basin of water, partially submerged.\nShine white light from a flashlight onto the mirror.\nObserve the reflected and refracted light, paying special attention to the edges.\n\nFor better results, you can create a small aperture by making a tiny hole in a piece of black paper and placing it in front of the flashlight.\n\n\n\n\n\n\nFigure 8— Home made water prism.\n\n\n\nWhile the dependence of water’s refractive index on wavelength is relatively weak, it’s still sufficient to demonstrate the familiar colors of the rainbow. This phenomenon will be referenced later in our discussion.\n\n\nCode\n#\nh2o=pd.read_csv(\"data/H2O.csv\",delimiter=\",\")\nplt.figure(figsize=(6,4))\nplt.plot(h2o.wl*1000,h2o.n,label=r\"$H_2O$\")\nplt.xlim(300,900)\nplt.ylim(1.3,1.36)\nplt.xlabel(\"wavelength [nm]\")\nplt.ylabel(\"refractive index n\")\nplt.legend()\nplt.show()\n\n\n\n\n\n\n\n\nFigure 9— Refractive index of water as a function of the wavelength.\n\n\n\n\n\n\n\n\n\n\n\nApplications of prims\n\n\n\n\n\nPrisms are versatile optical components with a wide range of applications across various fields. Here are some common uses of prisms:\n\n\nPorro prisms in traditional binoculars and roof prisms in modern designs serve to correct image inversion and provide a compact form. These prisms enable a longer optical path within a shorter physical length, enhancing magnification while maintaining portability. This design is crucial for both binoculars and some telescopes, offering users powerful magnification in a handheld device.\n\n\n\nRight-angle prisms are the key component in periscopes, redirecting light at 90-degree angles. This simple yet effective design allows viewers to see over obstacles or around corners, making periscopes invaluable in submarines and various military applications where direct line of sight is obstructed.\n\n\n\nCube beamsplitters play a vital role in dividing a single beam of light into two separate beams. This capability is essential in various scientific and medical applications, including interferometry, holography, and optical coherence tomography (OCT). The ability to split light beams precisely opens up numerous possibilities in research and diagnostics.\n\n\n\nRisley prisms, consisting of a pair of rotating wedge prisms, offer precise control over laser beam direction. This technology finds applications in laser scanning, target tracking, and adaptive optics. The ability to steer beams accurately is crucial in fields ranging from military applications to advanced scientific research.\n\n\n\nTotal Internal Reflection (TIR) prisms are a crucial component in Digital Light Processing (DLP) projectors. They direct light from the lamp to the Digital Micromirror Device (DMD) and then to the projection lens, enabling the high-quality image projection that DLP technology is known for.\n\n\n\nIn Single-Lens Reflex (SLR) cameras, pentaprisms play a critical role in the viewfinder system. They flip the image from the lens to appear upright and correctly oriented in the viewfinder, allowing photographers to accurately compose their shots.\n\n\n\nBrewster prisms find use in laser systems for polarization and wavelength separation. Additionally, dispersing prisms can be employed for wavelength tuning in certain laser setups, providing precise control over the laser’s output characteristics.\n\n\n\nIn the realm of telecommunications, prisms are utilized in some fiber optic connectors and switches. They help redirect light between fibers, playing a crucial role in maintaining signal integrity and enabling complex network architectures.\n\n\n\nFresnel lenses, a specialized type of prism, are employed in concentrated solar power systems. These lenses focus sunlight efficiently, contributing to the development of more effective solar energy collection technologies.\n\n\n\nPrisms are an integral part of HUD systems in both automotive and aviation contexts. They project crucial information onto the windshield or a combiner glass, allowing drivers or pilots to access important data without taking their eyes off their primary viewpoint.\n\n\n\nNomarski prisms enhance the capabilities of differential interference contrast microscopy. They increase contrast in transparent specimens, enabling scientists to observe details that would be difficult or impossible to see with conventional microscopy techniques.\n\n\n\nIn some OCT systems, prisms are employed for sample arm scanning and reference arm delay. This application of prisms contributes to the high-resolution imaging capabilities of OCT, which is particularly valuable in medical diagnostics, especially in ophthalmology."
  },
  {
    "objectID": "lectures/lecture01/lecture1_outline.html",
    "href": "lectures/lecture01/lecture1_outline.html",
    "title": "Photonics",
    "section": "",
    "text": "Maxwell’s equations overview\nLight as electromagnetic waves\nKey properties: polarization, dispersion\nSpeed of light derivation\nElectromagnetic spectrum\nConnection between wave optics and electromagnetic theory"
  },
  {
    "objectID": "lectures/lecture01/lecture1_outline.html#electromagnetic-theory-15-minutes",
    "href": "lectures/lecture01/lecture1_outline.html#electromagnetic-theory-15-minutes",
    "title": "Photonics",
    "section": "",
    "text": "Maxwell’s equations overview\nLight as electromagnetic waves\nKey properties: polarization, dispersion\nSpeed of light derivation\nElectromagnetic spectrum\nConnection between wave optics and electromagnetic theory"
  },
  {
    "objectID": "lectures/lecture01/lecture1_outline.html#quantum-nature-of-light-15-minutes",
    "href": "lectures/lecture01/lecture1_outline.html#quantum-nature-of-light-15-minutes",
    "title": "Photonics",
    "section": "Quantum Nature of Light (15 minutes)",
    "text": "Quantum Nature of Light (15 minutes)\n\nWave-particle duality introduction\nPhoton concept preview\nEnergy quantization\nBrief mention of photon statistics\nModern quantum optics applications"
  },
  {
    "objectID": "lectures/lecture01/lecture1_outline.html#comparative-analysis-and-conclusion-5-minutes",
    "href": "lectures/lecture01/lecture1_outline.html#comparative-analysis-and-conclusion-5-minutes",
    "title": "Photonics",
    "section": "Comparative Analysis and Conclusion (5 minutes)",
    "text": "Comparative Analysis and Conclusion (5 minutes)\n\nDomains of validity for different light models\nWhen to use which description\nUnified perspective on the nature of light\nPreview of upcoming lectures\nQ&A"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "course-info/schedule.html",
    "href": "course-info/schedule.html",
    "title": "Course Schedule",
    "section": "",
    "text": "The course will be held in two weekly lectures, starting 09.04.2025. The course will be held in English.\n\n\n\n\n\n\nLecture Times\n\n\n\n\nWednesday 15:15 am – 16:45 pm SR532",
    "crumbs": [
      "Home",
      "Course Info",
      "Schedule"
    ]
  },
  {
    "objectID": "course-info/schedule.html#lectures",
    "href": "course-info/schedule.html#lectures",
    "title": "Course Schedule",
    "section": "",
    "text": "The course will be held in two weekly lectures, starting 09.04.2025. The course will be held in English.\n\n\n\n\n\n\nLecture Times\n\n\n\n\nWednesday 15:15 am – 16:45 pm SR532",
    "crumbs": [
      "Home",
      "Course Info",
      "Schedule"
    ]
  },
  {
    "objectID": "course-info/schedule.html#lab-course",
    "href": "course-info/schedule.html#lab-course",
    "title": "Course Schedule",
    "section": "Lab Course",
    "text": "Lab Course\nPossible dates for the lab course will be published in the second half of the semester. A sign-up form will be made available for registration.",
    "crumbs": [
      "Home",
      "Course Info",
      "Schedule"
    ]
  },
  {
    "objectID": "course-info/exam.html",
    "href": "course-info/exam.html",
    "title": "Exam",
    "section": "",
    "text": "Exam Format\n\n\n\nThis course will end with an oral exam of 30 minutes duration. The exams will be held at after the end of the course during the reading period and the week after.\n\n\n\n\n\n\n\n\nExam Eligibility\n\n\n\nThere are no preconditions for taking the exam.",
    "crumbs": [
      "Home",
      "Course Info",
      "Exams"
    ]
  },
  {
    "objectID": "course-info/intructors.html",
    "href": "course-info/intructors.html",
    "title": "Instructors",
    "section": "",
    "text": "Linnéstr. 5, 04103 Leipzig\nOffice: 322\nPhone: +49 341 97 32571\nEmail: lastname@physik.uni-leipzig.de",
    "crumbs": [
      "Home",
      "Course Info",
      "Instructor"
    ]
  },
  {
    "objectID": "course-info/intructors.html#lectures",
    "href": "course-info/intructors.html#lectures",
    "title": "Instructors",
    "section": "",
    "text": "Linnéstr. 5, 04103 Leipzig\nOffice: 322\nPhone: +49 341 97 32571\nEmail: lastname@physik.uni-leipzig.de",
    "crumbs": [
      "Home",
      "Course Info",
      "Instructor"
    ]
  },
  {
    "objectID": "course-info/intructors.html#lab-course",
    "href": "course-info/intructors.html#lab-course",
    "title": "Instructors",
    "section": "Lab Course",
    "text": "Lab Course\n\nFelix Patzschke\n\nLinnéstr. 5, 04103 Leipzig\nOffice: 318\nPhone: +49 341 97 32572\n\n\n\nLisa Rohde\n\nLinnéstr. 5, 04103 Leipzig\nOffice: 127\nPhone: +49 341 97 32581",
    "crumbs": [
      "Home",
      "Course Info",
      "Instructor"
    ]
  },
  {
    "objectID": "contents.html",
    "href": "contents.html",
    "title": "PART I: FOUNDATIONS OF PHOTONICS",
    "section": "",
    "text": "Course overview and historical perspective\nMultiple descriptions of light:\n\nRay optics: eikonal equation, Snell’s law, reflection\nWave optics: wave equation, superposition, interference\nElectromagnetic theory: overview of Maxwell’s equations\nQuantum nature: preview of photon concept\n\nComparative analysis of different light models and their domains of validity\n\n\n\n\n\nMaxwell’s equations and derivation of wave equation\nPlane waves and polarization states\nPoynting vector and energy transport\nReflection and transmission at interfaces\nFresnel equations and Brewster’s angle\nTotal internal reflection and evanescent waves\nWaveguides: basic principles\n\n\n\n\n\nPhotons and wave-particle duality\nQuantization of electromagnetic field\nPhoton statistics:\n\nPoissonian, sub-Poissonian, and super-Poissonian distributions\nSecond-order correlation functions\nHanbury Brown and Twiss experiment\n\nCoherent states, Fock states, and squeezed states\nSpontaneous and stimulated emission"
  },
  {
    "objectID": "contents.html#lecture-1-fundamental-theories-of-light",
    "href": "contents.html#lecture-1-fundamental-theories-of-light",
    "title": "PART I: FOUNDATIONS OF PHOTONICS",
    "section": "",
    "text": "Course overview and historical perspective\nMultiple descriptions of light:\n\nRay optics: eikonal equation, Snell’s law, reflection\nWave optics: wave equation, superposition, interference\nElectromagnetic theory: overview of Maxwell’s equations\nQuantum nature: preview of photon concept\n\nComparative analysis of different light models and their domains of validity"
  },
  {
    "objectID": "contents.html#lecture-2-electromagnetic-theory-of-light",
    "href": "contents.html#lecture-2-electromagnetic-theory-of-light",
    "title": "PART I: FOUNDATIONS OF PHOTONICS",
    "section": "",
    "text": "Maxwell’s equations and derivation of wave equation\nPlane waves and polarization states\nPoynting vector and energy transport\nReflection and transmission at interfaces\nFresnel equations and Brewster’s angle\nTotal internal reflection and evanescent waves\nWaveguides: basic principles"
  },
  {
    "objectID": "contents.html#lecture-3-quantum-nature-of-light",
    "href": "contents.html#lecture-3-quantum-nature-of-light",
    "title": "PART I: FOUNDATIONS OF PHOTONICS",
    "section": "",
    "text": "Photons and wave-particle duality\nQuantization of electromagnetic field\nPhoton statistics:\n\nPoissonian, sub-Poissonian, and super-Poissonian distributions\nSecond-order correlation functions\nHanbury Brown and Twiss experiment\n\nCoherent states, Fock states, and squeezed states\nSpontaneous and stimulated emission"
  },
  {
    "objectID": "contents.html#lecture-4-introduction-to-fourier-optics",
    "href": "contents.html#lecture-4-introduction-to-fourier-optics",
    "title": "PART I: FOUNDATIONS OF PHOTONICS",
    "section": "Lecture 4: Introduction to Fourier Optics",
    "text": "Lecture 4: Introduction to Fourier Optics\n\nMathematical foundations of 2D Fourier transforms\nSpatial frequency domain interpretation\nLinear systems theory in optics\nAmplitude and phase transfer functions\nConvolution theorem and its optical significance\nSpatial filtering concepts"
  },
  {
    "objectID": "contents.html#lecture-5-diffraction-theory-in-fourier-framework",
    "href": "contents.html#lecture-5-diffraction-theory-in-fourier-framework",
    "title": "PART I: FOUNDATIONS OF PHOTONICS",
    "section": "Lecture 5: Diffraction Theory in Fourier Framework",
    "text": "Lecture 5: Diffraction Theory in Fourier Framework\n\nFraunhofer and Fresnel diffraction\nDiffraction integral as a Fourier relationship\nFar-field diffraction patterns\nDiffraction-limited systems\nAperture functions and their Fourier transforms\nMultiple aperture systems and interference"
  },
  {
    "objectID": "contents.html#lecture-6-optical-imaging-systems-and-modern-microscopy",
    "href": "contents.html#lecture-6-optical-imaging-systems-and-modern-microscopy",
    "title": "PART I: FOUNDATIONS OF PHOTONICS",
    "section": "Lecture 6: Optical Imaging Systems and Modern Microscopy",
    "text": "Lecture 6: Optical Imaging Systems and Modern Microscopy\n\nPoint spread function and optical transfer function\nResolution limits and Abbe’s theory\nFrequency space representation of imaging\nCoherent vs. incoherent imaging\nModern microscopy techniques overview\nSuper-resolution concepts and approaches"
  },
  {
    "objectID": "contents.html#lecture-7-advanced-microscopy-sim-and-computational-imaging",
    "href": "contents.html#lecture-7-advanced-microscopy-sim-and-computational-imaging",
    "title": "PART I: FOUNDATIONS OF PHOTONICS",
    "section": "Lecture 7: Advanced Microscopy: SIM and Computational Imaging",
    "text": "Lecture 7: Advanced Microscopy: SIM and Computational Imaging\n\nStructured Illumination Microscopy (SIM) theory\nFrequency space extension in SIM\nComputational imaging fundamentals\nPhase retrieval and ptychography\nFourier ptychographic microscopy\nMachine learning in computational imaging\nComparison of different super-resolution techniques"
  },
  {
    "objectID": "contents.html#lecture-8-nonlinear-optics-i",
    "href": "contents.html#lecture-8-nonlinear-optics-i",
    "title": "PART I: FOUNDATIONS OF PHOTONICS",
    "section": "Lecture 8: Nonlinear Optics I",
    "text": "Lecture 8: Nonlinear Optics I\n\nOptical nonlinearity origins\nNonlinear susceptibility tensors\nSecond-order nonlinear effects\nSecond harmonic generation\nSum and difference frequency generation\nPhase matching conditions and techniques\nApplications in frequency conversion"
  },
  {
    "objectID": "contents.html#lecture-9-nonlinear-optics-ii",
    "href": "contents.html#lecture-9-nonlinear-optics-ii",
    "title": "PART I: FOUNDATIONS OF PHOTONICS",
    "section": "Lecture 9: Nonlinear Optics II",
    "text": "Lecture 9: Nonlinear Optics II\n\nThird-order nonlinear effects\nSelf-phase modulation and self-focusing\nFour-wave mixing processes\nOptical Kerr effect\nNonlinear absorption phenomena\nApplications in optical switching and computing\nNonlinear microscopy techniques"
  },
  {
    "objectID": "contents.html#lecture-10-nonlinear-optics-iii",
    "href": "contents.html#lecture-10-nonlinear-optics-iii",
    "title": "PART I: FOUNDATIONS OF PHOTONICS",
    "section": "Lecture 10: Nonlinear Optics III",
    "text": "Lecture 10: Nonlinear Optics III\n\nRaman and Brillouin scattering\nMultiphoton processes\nHigh harmonic generation\nNonlinear optics with structured light"
  },
  {
    "objectID": "contents.html#lecture-11-acousto-optics",
    "href": "contents.html#lecture-11-acousto-optics",
    "title": "PART I: FOUNDATIONS OF PHOTONICS",
    "section": "Lecture 11: Acousto-Optics",
    "text": "Lecture 11: Acousto-Optics\n\nSound waves and their interaction with light\nAcousto-optic effect theory\nRaman-Nath and Bragg diffraction regimes\nAcousto-optic devices:\n\nModulators and deflectors\nTunable filters\nFrequency shifters\n\nApplications in imaging and signal processing"
  },
  {
    "objectID": "contents.html#lecture-12-plasmonics",
    "href": "contents.html#lecture-12-plasmonics",
    "title": "PART I: FOUNDATIONS OF PHOTONICS",
    "section": "Lecture 12: Plasmonics",
    "text": "Lecture 12: Plasmonics\n\nIntroduction to plasmons and electron plasma oscillations\nSurface plasmon polaritons: theory and dispersion relations\nExcitation methods (prism, grating)\nLocalized surface plasmons in nanostructures\nField enhancement effects\nPlasmon resonance sensing\nNear-field enhancement applications"
  },
  {
    "objectID": "contents.html#lecture-13-advanced-topics-and-future-directions",
    "href": "contents.html#lecture-13-advanced-topics-and-future-directions",
    "title": "PART I: FOUNDATIONS OF PHOTONICS",
    "section": "Lecture 13: Advanced Topics and Future Directions",
    "text": "Lecture 13: Advanced Topics and Future Directions\n\nIntegrated photonics overview\nPhotonic crystals and metamaterials\nQuantum photonic technologies\nOptical computing advances\nRecent breakthroughs in microscopy\nEmerging trends in nanophotonics\nCourse summary and comprehensive review"
  },
  {
    "objectID": "course-info/labcourse.html",
    "href": "course-info/labcourse.html",
    "title": "Lab Course",
    "section": "",
    "text": "At the end of the course, we will conduct a block lab course where students will have the opportunity to apply the principles of Fourier Optics in a hands-on setting. Students should form groups of 4-5 people, and each group will be allocated two days for experimentation.\nThe lab course is designed to promote free experimentation. Each group will:\n\nOn the first day: Brainstorm and develop ideas for experiments using the provided optical equipment, start with experiments\nOn the second day: Carry out the planned experiments and write up the results in the afternoon\n\nWe will provide a set of optical equipment for each group to explore concepts from Fourier Optics in a practical way. Possible dates for the lab course will be published in the second half of the semester. A sign-up form will be made available for registration.",
    "crumbs": [
      "Home",
      "Course Info",
      "Lab Course"
    ]
  },
  {
    "objectID": "course-info/resources.html",
    "href": "course-info/resources.html",
    "title": "Resources for Introduction to Photonics",
    "section": "",
    "text": "I will refer in the lecture to several resources from which I have listed here some useful books. The most comprehensive one is Fundamentals of Photonics by Saleh and Teich.\n\nFundamentals of Photonics, Saleh/Teich\nOptics, Hecht\nClassical Electrodynamics, Jackson\nIntroduction to Fourier Optics, Goodman\nOptical Coherence and Quantum Optics, Mandel/Wolf\nNonlinear Optics, Bloembergen\nNonlinear Optics, Boyd\nPlasmonics: Fundamentals and Applications, Maier\nPrinciples of Nano-Optics, Hecht/Nowotny\n\nBesides that, the field of photonics is full of interesting research articles that will appear here as we go:",
    "crumbs": [
      "Home",
      "Course Info",
      "Ressources"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Photonics",
    "section": "",
    "text": "Photonics Logo\n\n\nPhotonics is a field of science that is manipulating the flow of light. It contains many facets of research involving light propgation from fundamentals involving light matter interaction to applications involving photonic computing with disordered media or single light quanta to adaptive superresolution microscopy. It is one of the fastest growing fields.\nIn this course we will introduce into the field of optics and photonics. We will start with simple but powerful descriptions of light propagation using ray optics to more advanced physics using electromagnetic waves. We will explore Fourier optics, anisotropic media and non-linear optics to lay the foundation to more complex topics in advanced lecture series.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "lectures/lecture01/introduction.html",
    "href": "lectures/lecture01/introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "RC Time Constants: As circuit dimensions shrink, the RC time constant doesn’t scale favorably, creating a fundamental speed limit for electronic signal propagation.\nJoule Heating: Current flow through resistive elements produces heat proportional to I²R, which becomes increasingly problematic as device density increases according to Moore’s Law.\nSkin Effect: At high frequencies, current flows primarily near conductor surfaces due to electromagnetic field penetration limitations, increasing effective resistance.\nElectromagnetic Interference: Current-carrying wires act as both transmitters and receivers of electromagnetic radiation, creating cross-talk issues that worsen with frequency."
  },
  {
    "objectID": "lectures/lecture01/introduction.html#fundamental-physical-limitations-of-electronics",
    "href": "lectures/lecture01/introduction.html#fundamental-physical-limitations-of-electronics",
    "title": "Introduction",
    "section": "",
    "text": "RC Time Constants: As circuit dimensions shrink, the RC time constant doesn’t scale favorably, creating a fundamental speed limit for electronic signal propagation.\nJoule Heating: Current flow through resistive elements produces heat proportional to I²R, which becomes increasingly problematic as device density increases according to Moore’s Law.\nSkin Effect: At high frequencies, current flows primarily near conductor surfaces due to electromagnetic field penetration limitations, increasing effective resistance.\nElectromagnetic Interference: Current-carrying wires act as both transmitters and receivers of electromagnetic radiation, creating cross-talk issues that worsen with frequency."
  },
  {
    "objectID": "lectures/lecture01/introduction.html#advantages-from-maxwells-equations-perspective",
    "href": "lectures/lecture01/introduction.html#advantages-from-maxwells-equations-perspective",
    "title": "Introduction",
    "section": "Advantages from Maxwell’s Equations Perspective",
    "text": "Advantages from Maxwell’s Equations Perspective\n\nPhoton vs. Electron Energy: Photons at optical frequencies (~10^14 Hz) have energies of ~1-2 eV, while electronic transitions in semiconductors operate at much lower energies, enabling fundamentally higher information bandwidth.\nWave-Particle Nature: Light’s dual nature allows it to be guided, focused, and manipulated without the scattering mechanisms that limit electron transport in solids.\nDispersion Relations: The dispersion relation for photons in waveguides can be engineered more flexibly than electronic band structures in semiconductors."
  },
  {
    "objectID": "lectures/lecture01/introduction.html#quantitative-comparisons",
    "href": "lectures/lecture01/introduction.html#quantitative-comparisons",
    "title": "Introduction",
    "section": "Quantitative Comparisons",
    "text": "Quantitative Comparisons\n\nInformation Capacity: According to Shannon’s theorem, channel capacity increases linearly with bandwidth. Optical frequencies (~100 THz) offer approximately 10,000 times more bandwidth than the highest practical electronic frequencies (~10 GHz).\nPropagation Losses: Modern optical fibers achieve losses of ~0.2 dB/km, while electronic transmission lines typically experience losses of 10-100 dB/km at high frequencies.\nEnergy Per Bit: Theoretical minimum energy to transmit one bit optically is orders of magnitude lower than electronic transmission (~10^-18 J vs ~10^-15 J)."
  },
  {
    "objectID": "lectures/lecture01/introduction.html#quantum-mechanical-considerations",
    "href": "lectures/lecture01/introduction.html#quantum-mechanical-considerations",
    "title": "Introduction",
    "section": "Quantum Mechanical Considerations",
    "text": "Quantum Mechanical Considerations\n\nCoherence Properties: Photons maintain quantum coherence over much longer distances than electrons in solid-state environments, enabling quantum information applications.\nNon-interacting Bosons: Unlike electrons (fermions), photons don’t directly interact with each other, allowing signals to cross without interference."
  },
  {
    "objectID": "lectures/lecture01/01-lecture01.html",
    "href": "lectures/lecture01/01-lecture01.html",
    "title": "Theories of Light",
    "section": "",
    "text": "Ray optics, or geometric optics, provides a powerful framework for understanding light propagation when the wavelength is much smaller than the dimensions of optical elements involved. In this approach, light travels along straight lines called rays in homogeneous media, with well-defined paths that can be mathematically traced. This description serves as the foundation for analyzing many optical systems, from simple mirrors to complex microscopes and telescopes.\nThe cornerstone of ray optics is Fermat’s Principle, which states that light follows the path that minimizes the optical path length or, equivalently, the time of travel between two points. Mathematically, if we consider a path \\(C\\) connecting points A and B, Fermat’s Principle requires:\n\\[\\delta\\int_C n(s)ds = 0\\]\nwhere \\(n(s)\\) is the refractive index along the path and \\(ds\\) is the differential path length. This variational principle leads directly to the laws of reflection and refraction.\n\n\nCode\ndef calculate_path_length(x, start, end):\n    \"\"\"Calculate the total path length from start to point x to end\"\"\"\n    d1 = np.sqrt((x - start[0])**2 + (start[1])**2)\n    d2 = np.sqrt((end[0] - x)**2 + (end[1])**2)\n    return d1 + d2\n\n# Set up the figure\nfig, ax = plt.subplots(figsize=get_size(15, 10))\n\n# Define start and end points\nstart_point = (-4, 3)\nend_point = (4, 3)\n\n# X positions for different possible paths\nx_positions = np.linspace(-3.5, 3.5, 15)\n\n# Calculate path lengths\npath_lengths = [calculate_path_length(x, start_point, end_point) for x in x_positions]\n\n# Find the minimum path (Fermat's principle)\nmin_index = np.argmin(path_lengths)\nmin_x = x_positions[min_index]\n\n# Plot the horizontal line (interface)\nax.axhline(y=0, color='black', linestyle='-', linewidth=1)\n\n# Plot all possible paths\nfor i, x in enumerate(x_positions):\n    if i == min_index:\n        continue  # Skip the minimum path for now\n\n    # Create path\n    verts = [\n        start_point,\n        (x, 0),\n        end_point\n    ]\n    codes = [\n        Path.MOVETO,\n        Path.LINETO,\n        Path.LINETO\n    ]\n    path = Path(verts, codes)\n    patch = patches.PathPatch(path, facecolor='none', edgecolor='gray',\n                             linestyle='--', lw=0.5,alpha=0.65)\n    ax.add_patch(patch)\n\n# Plot the minimum path (Fermat's Principle)\nverts = [\n    start_point,\n    (min_x, 0),\n    end_point\n]\ncodes = [\n    Path.MOVETO,\n    Path.LINETO,\n    Path.LINETO\n]\npath = Path(verts, codes)\npatch = patches.PathPatch(path, facecolor='none', edgecolor='red',\n                         linestyle='-')\nax.add_patch(patch)\n\n# Add dots for the points\nax.plot(start_point[0], start_point[1], 'bo', label='start point')\nax.plot(end_point[0], end_point[1], 'go',  label='end point')\nax.plot(min_x, 0, 'ro',  label='reflection Point')\n\n# Set labels and title\nax.set_xlabel('x-position')\nax.set_ylabel('y-position')\nax.text(-0.7, -1, \"mirror\")\n\n# Set plot limits and legend\nax.set_xlim(-5, 5)\nax.set_ylim(-4, 4)\nax.set_aspect('equal')\nax.legend()\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1— Fermat’s principle for reflection of light at an interface\n\n\n\n\n\nReflection For reflection at a planar interface, we can derive the law of reflection by considering a ray traveling from point A to point B via reflection at point P on a mirror. The total path length is \\(L = |AP| + |PB|\\). According to Fermat’s Principle, the actual path minimizes \\(L\\), so we set:\n\\[\\frac{dL}{dx} = 0\\]\nwhere \\(x\\) is the position of P. After calculus manipulation, this yields the familiar law of reflection:\n\\[\\theta_i = \\theta_r\\]\nwhere \\(\\theta_i\\) is the angle of incidence and \\(\\theta_r\\) is the angle of reflection, both measured from the normal to the surface.\n\n\nCode\ndef calculate_optical_path(x, start, end, n1, n2):\n    \"\"\"Calculate the total optical path length from start to point x to end\"\"\"\n    d1 = n1 * np.sqrt((x - start[0])**2 + (start[1])**2)  # Optical path in medium 1\n    d2 = n2 * np.sqrt((end[0] - x)**2 + (end[1])**2)      # Optical path in medium 2\n    return d1 + d2\n\n# Set up the figure\nfig, ax = plt.subplots(figsize=get_size(15, 10))\n\n# Define start and end points\nstart_point = (-4, 3)\nend_point = (4, -3)\n\n# Define refractive indices\nn1 = 1.0  # Medium 1 (above interface)\nn2 = 1.5  # Medium 2 (below interface)\n\n# X positions for different possible paths\nx_positions = np.linspace(-3.5, 3.5, 15)\n\n# Calculate optical path lengths\noptical_paths = [calculate_optical_path(x, start_point, end_point, n1, n2) for x in x_positions]\n\n# Find the minimum path (Fermat's principle)\nmin_index = np.argmin(optical_paths)\nmin_x = x_positions[min_index]\n\n# Plot the horizontal line (interface)\nax.axhline(y=0, color='black', linestyle='-', linewidth=1)\n\n# Plot all possible paths\nfor i, x in enumerate(x_positions):\n    if i == min_index:\n        continue  # Skip the minimum path for now\n\n    # Create path\n    verts = [\n        start_point,\n        (x, 0),\n        end_point\n    ]\n    codes = [\n        Path.MOVETO,\n        Path.LINETO,\n        Path.LINETO\n    ]\n    path = Path(verts, codes)\n    patch = patches.PathPatch(path, facecolor='none', edgecolor='gray',\n                             linestyle='--', lw=0.5, alpha=0.65)\n    ax.add_patch(patch)\n\n# Plot the minimum path (Fermat's Principle)\nverts = [\n    start_point,\n    (min_x, 0),\n    end_point\n]\ncodes = [\n    Path.MOVETO,\n    Path.LINETO,\n    Path.LINETO\n]\npath = Path(verts, codes)\npatch = patches.PathPatch(path, facecolor='none', edgecolor='red',\n                         linestyle='-', lw=1)\nax.add_patch(patch)\n\n# Add dots for the points\nax.plot(start_point[0], start_point[1], 'bo', label='start')\nax.plot(end_point[0], end_point[1], 'go', label='end')\nax.plot(min_x, 0, 'ro', label='refraction')\n\n# Calculate and draw angles\n# Incident ray\ndx1 = min_x - start_point[0]\ndy1 = 0 - start_point[1]\nincident_angle = np.arctan2(-dy1, dx1)\ntheta1 = np.pi/2 - incident_angle\n\n# Refracted ray\ndx2 = end_point[0] - min_x\ndy2 = end_point[1] - 0\nrefracted_angle = np.arctan2(dy2, dx2)\ntheta2 = np.pi/2 + refracted_angle\n\n# Draw angle arcs\n\n# Add angle labels\nax.text(min_x + 0.3, 0.3, r'$\\theta_1$', color='blue')\nax.text(min_x - 0.5, -0.3, r'$\\theta_2$', color='green')\n\n# Set labels and title\nax.set_xlabel('x-position')\nax.set_ylabel('y-position')\nax.text(-3, 0.5, f\"n₁ = {n1}\", color='blue')\nax.text(-3, -0.5, f\"n₂ = {n2}\", color='green')\n\n# Set plot limits and legend\nax.set_xlim(-5, 5)\nax.set_ylim(-4, 4)\nax.set_aspect('equal')\nax.legend()\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nFigure 2— Snell’s Law from Fermat’s Principle\n\n\n\n\n\n\n\n\n\n\n\nDestructive Interference of Non-Minimal Paths\n\n\n\n\n\nWe can demonstrate that all paths except the shortest one interfere destructively using Feynman’s path integral formulation. In this approach, light takes all possible paths between points A and B, with each path contributing an amplitude with phase \\(e^{iS/\\hbar}\\), where \\(S\\) is the action proportional to the optical path length: \\(S = kL\\) where \\(k = 2\\pi/\\lambda\\) is the wave number.\nTo understand why non-minimal paths cancel out, let’s denote the minimal path as \\(x_0(t)\\) and nearby paths as \\(x_0(t) + \\delta x(t)\\), where \\(\\delta x(t)\\) represents small deviations. The action for these perturbed paths expands as: \\[S[x_0 + \\delta x] = S[x_0] + \\frac{\\delta S}{\\delta x}\\bigg|_{x_0} \\delta x + \\frac{1}{2}\\frac{\\delta^2 S}{\\delta x^2}\\bigg|_{x_0} (\\delta x)^2 + ...\\]\nSince \\(x_0\\) is the extremal path (according to Fermat’s principle), we have \\(\\frac{\\delta S}{\\delta x}\\bigg|_{x_0} = 0\\). This means the first-order term vanishes, leaving the quadratic term as the leading contribution to the phase difference:\n\\[\\Delta\\phi = S[x] - S[x_0] \\approx \\frac{1}{2}\\frac{\\delta^2 S}{\\delta x^2}\\bigg|_{x_0} (\\delta x)^2\\]\nThis quadratic dependence is crucial: as we move away from the minimal path, the phase difference increases as the square of the deviation \\(\\delta x\\). When we consider a specific deviation \\(\\delta x_c\\) where \\(\\Delta\\phi = \\pi\\), paths will contribute with exactly opposite phases compared to the minimal path, leading to destructive interference:\n\\[\\frac{1}{2}\\frac{\\delta^2 S}{\\delta x^2}\\bigg|_{x_0} (\\delta x_c)^2 = \\pi\\]\nFor even larger deviations, the phase differences continue to increase, creating alternating bands of constructive and destructive interference. When summed over all possible paths, these rapidly varying phases cancel each other out.\nFor paths far from the minimal one, the destructive interference is even more pronounced. Mathematically, we can demonstrate this by considering a continuous distribution of paths with optical path lengths \\(L\\). The total amplitude contribution from these paths is given by:\n\\[A = \\int e^{ikL(x)} dx\\]\nFor non-minimal paths, we can parametrize the path length as \\(L(x) = L_0 + \\alpha(x-x_0)^2\\) for some constant \\(\\alpha\\), where \\(x_0\\) corresponds to the minimal path. The amplitude becomes:\n\\[A = \\int e^{ik(L_0 + \\alpha(x-x_0)^2)} dx = e^{ikL_0}\\int e^{ik\\alpha(x-x_0)^2} dx\\]\nThis integral evaluates to:\n\\[A = e^{ikL_0}\\sqrt{\\frac{\\pi}{k\\alpha}}e^{i\\pi/4}\\]\nThe key insight is that the amplitude scales as \\(1/\\sqrt{k\\alpha}\\), which means that as the curvature \\(\\alpha\\) of the path length function increases (as happens far from the minimal path), the contribution to the total amplitude diminishes. This mathematically proves why non-minimal path regions contribute negligibly to the overall path integral.\nThis cancellation mechanism explains why light appears to follow only the path of least time in ray optics. The mathematics shows that constructive interference occurs only for paths very close to the minimal path, while all other paths destructively interfere with their neighbors. This phenomenon emerges naturally from wave properties without requiring quantum mechanical constants like ℏ. We can express this classically by setting \\(S = kL\\) and observing how path differences relative to the wavelength create interference patterns.\n\n\nCode\nfrom matplotlib import cm\n\n# Parameters\nnum_paths = 100\nmin_path_index = num_paths // 2\npath_deviation = np.linspace(-2, 2, num_paths)  # Deviation from minimal path\nalpha = 5  # Curvature parameter controlling phase variation rate\n\n# Calculate phase for each path (quadratic dependence on deviation)\nphases = alpha * path_deviation**2\n\n# Set up the figure\nfig, ax = plt.subplots(figsize=get_size(14, 8))\n\n# Plot phase vs path deviation with a simple blue line and points\nax.plot(path_deviation, phases, '-', color='blue', linewidth=2)\n\n# Highlight the minimal path\nax.axvline(x=0, color='r', linestyle='--', linewidth=2, label='Minimal path')\n\n# Highlight paths near minimal path\nnear_minimal = np.abs(path_deviation) &lt; 0.3\n#ax.scatter(path_deviation[near_minimal], phases[near_minimal],\n#          color='green', s=70, label='Near minimal path', zorder=3)\n\n# Set labels and grid\nax.set_xlabel('path deviation')\nax.set_ylabel('phase [rad]')\n\n\n# Add horizontal lines at multiples of π to show constructive/destructive interference\nfor i in range(int(np.max(phases)/np.pi) + 1):\n    if i == 0:\n        ax.axhline(y=i*np.pi, color='k', linestyle='-', alpha=0.2,\n                  label='Constructive interference')\n    elif i % 2 == 0:\n        ax.axhline(y=i*np.pi, color='k', linestyle='-', alpha=0.2)\n    else:\n        ax.axhline(y=i*np.pi, color='k', linestyle='--', alpha=0.2,\n                  label='Destructive interference' if i==1 else None)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nFigure 3— Visualization of path phases in Fermat’s principle. The figure shows how the phase varies with path deviation from the minimal path (marked by the vertical red line at zero). The quadratic relationship between phase and path deviation demonstrates why paths near the minimal one constructively interfere (similar phases), while non-minimal paths tend to cancel through destructive interference (rapidly varying phases).\n\n\n\n\n\n\n\n\nRefraction Similarly, for refraction between two media with refractive indices \\(n_1\\) and \\(n_2\\), the optical path length is:\n\\[L = n_1|AP| + n_2|PB|\\]\nApplying Fermat’s Principle and solving the resulting equation leads to Snell’s law:\n\\[n_1\\sin\\theta_1 = n_2\\sin\\theta_2\\]\nwhere \\(\\theta_1\\) and \\(\\theta_2\\) are the angles of incidence and refraction, respectively.\nThese fundamental laws allow us to analyze the formation of images by various optical systems. For instance, in a thin lens with focal length \\(f\\), we can establish the relationship between object distance \\(s_o\\), image distance \\(s_i\\), and focal length through the lens equation:\n\\[\\frac{1}{s_o} + \\frac{1}{s_i} = \\frac{1}{f}\\]\nThis equation enables us to predict image formation characteristics in optical instruments such as cameras, microscopes, and telescopes.\nDespite its power, ray optics has limitations. It cannot explain phenomena like diffraction, which occurs when light encounters obstacles or apertures comparable to its wavelength. Here, we need wave optics for a complete description. Additionally, ray optics fails to account for the finite width of beams and the existence of evanescent waves.\n\n\nCode\n# Set up the figure\nfig, ax = plt.subplots(figsize=get_size(18,7))\n\n# Define lens parameters\nf = 2  # focal length\nh_obj = 1.5  # object height\ns_o = 6  # object distance\ns_i = 1/(1/f - 1/s_o)  # image distance from lens formula\nh_img = -h_obj * s_i/s_o  # image height\n\n# Plot optical axis\nax.axhline(y=0, color='black', linestyle='-')\n\n# Plot lens\nlens_height = 3\nax.plot([0, 0], [-lens_height/2, lens_height/2], 'k-')\n# Add curved edges to represent a lens\ncurve_x = np.linspace(-0.1, 0, 20)\ncurve_y1 = lens_height/2 * np.sqrt(1 - (curve_x/0.1)**2)\ncurve_y2 = -lens_height/2 * np.sqrt(1 - (curve_x/0.1)**2)\nax.plot(curve_x, curve_y1, 'k-')\nax.plot(curve_x, curve_y2, 'k-')\n\n# Plot focal points\nax.plot(f, 0, 'ko', markersize=4)\nax.plot(-f, 0, 'ko', markersize=4)\nax.text(f, -0.4, r'$F$', fontsize=10)\nax.text(-f, -0.4, r\"$F'$\", fontsize=10)\n\n# Plot object and image\nax.arrow(-s_o, 0, 0, h_obj-0.1, head_width=0.1, head_length=0.1, fc='blue', ec='blue')\nax.arrow(s_i, 0, 0, h_img+0.1, head_width=0.1, head_length=0.1, fc='red', ec='red')\nax.text(-s_o+0.1, h_obj/2, r'object', color='blue', fontsize=9)\nax.text(s_i+0.1, h_img/2, r'image', color='red', fontsize=9)\n\n# Principal rays\n# Ray 1: Parallel to axis, through focal point\nax.plot([-s_o, 0], [h_obj, h_obj], 'b-', label='parallel to axis → through F')\nax.plot([0, s_i], [h_obj, h_img], 'b-')\n\n# Ray 2: Through center, unchanged direction\nax.plot([-s_o, s_i], [h_obj, h_img], 'g-',  label='through center')\n\n# Ray 3: Through focal point, parallel to axis\nax.plot([-s_o, 0], [h_obj, 0], 'r-', label='through F → parallel to axis')\nax.plot([0, s_i], [0, h_img], 'r-')\n\n# Add lens equation\nequation_text = r\"$\\frac{1}{s_o} + \\frac{1}{s_i} = \\frac{1}{f}$\"\nax.text(-5, -1.5, equation_text, fontsize=14, bbox=dict(facecolor='white', lw=0,\n    alpha=0.7))\n\n# Labels showing values\nax.text(-s_o/2, 0.2, f\"$s_o = {s_o}$\")\nax.text(s_i/2, 0.4, f\"$s_i = {s_i:.2f}$\")\nax.text(0, -2, f\"$f = {f}$\")\n\n# Set plot limits and aspect ratio\nax.set_xlim(-s_o-1, s_i+1)\nax.set_ylim(-2.5, 2.5)\n#ax.set_aspect('equal')\n\n# Axis labels\nax.set_xlabel('position')\nax.set_ylabel('height')\n\n# Add legend for principal rays\n#ax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.15), ncol=3, fontsize=8)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nFigure 4— Ray diagram for a thin lens showing object and image formation\n\n\n\n\n\n\n\n\nWhile we’ve discussed Fermat’s principle in its integral form, it can also be expressed as a differential equation that describes the path of light rays. This approach reveals how ray trajectories emerge from the underlying variational principle.\nStarting with Fermat’s principle that light follows the path of least optical path length:\n\\[\\delta\\int_C n(s)ds = 0\\]\nWe can derive the differential equation governing the ray path. If we parametrize the ray path as \\(\\mathbf{r}(s)\\) where \\(s\\) is the arc length, then the ray equation becomes:\n\\[\\frac{d}{ds}\\left(n\\frac{d\\mathbf{r}}{ds}\\right) = \\nabla n\\]\nThis equation states that the rate of change of the momentum vector (\\(n\\frac{d\\mathbf{r}}{ds}\\)) equals the gradient of the refractive index. In a medium with constant refractive index (\\(\\nabla n = 0\\)), this simplifies to:\n\\[\\frac{d^2\\mathbf{r}}{ds^2} = 0\\]\nThis confirms that light rays follow straight lines in homogeneous media.\nFor a medium with a continuously varying refractive index \\(n(x,y,z)\\), the ray equation becomes:\n\\[\\frac{d}{ds}\\left(n\\frac{d\\mathbf{r}}{ds}\\right) = \\nabla n\\]\nThis differential form of Fermat’s principle is particularly useful in gradient-index optics, where the refractive index changes continuously throughout the medium, causing light rays to follow curved paths. Examples include optical fibers with graded-index profiles and the atmosphere where temperature gradients create mirages.\n\n\n\n\n\n\nDeriving the Differential Form from the Integral Principle\n\n\n\n\n\nTo derive the differential ray equation from Fermat’s integral principle, we apply the calculus of variations. Starting with the optical path length functional:\n\\[L = \\int_C n(s)ds = \\int_{t_1}^{t_2} n(\\mathbf{r}(t)) \\left|\\frac{d\\mathbf{r}}{dt}\\right| dt\\]\nWhere \\(\\mathbf{r}(t)\\) parametrizes the path. The term \\(\\left|\\frac{d\\mathbf{r}}{dt}\\right|\\) represents the differential element of arc length \\(ds\\) along the path, so \\(ds = \\left|\\frac{d\\mathbf{r}}{dt}\\right| dt\\). This parametrization allows us to convert the path integral over the curve \\(C\\) into a definite integral over the parameter \\(t\\). According to Fermat’s principle, the true path makes this integral stationary (δL = 0).\nConsider a small variation in the path: \\(\\mathbf{r}(t) \\rightarrow \\mathbf{r}(t) + \\epsilon\\mathbf{\\eta}(t)\\) where \\(\\mathbf{\\eta}(t_1) = \\mathbf{\\eta}(t_2) = 0\\) (fixed endpoints). Expanding the variation of the integral to first order in ε:\n\\[\\delta L = \\frac{d}{d\\epsilon}\\bigg|_{\\epsilon=0} \\int_{t_1}^{t_2} n(\\mathbf{r}(t) + \\epsilon\\mathbf{\\eta}(t)) \\left|\\frac{d}{dt}(\\mathbf{r}(t) + \\epsilon\\mathbf{\\eta}(t))\\right| dt\\]\nUsing the chain rule and reparametrizing with arc length \\(s\\) (where \\(\\frac{d\\mathbf{r}}{ds}\\) is a unit vector), the stationarity condition leads to:\n\\[\\int_C \\left[ \\nabla n \\cdot \\mathbf{\\eta} - \\frac{d}{ds}\\left(n\\frac{d\\mathbf{r}}{ds}\\right) \\cdot \\mathbf{\\eta} \\right] ds = 0\\]\nSince this must hold for any variation \\(\\mathbf{\\eta}\\), we obtain the Euler-Lagrange equation:\n\\[\\frac{d}{ds}\\left(n\\frac{d\\mathbf{r}}{ds}\\right) = \\nabla n\\]\nThis is the ray equation in differential form. It shows that rays bend toward regions of higher refractive index, directly analogous to how a mechanical particle’s trajectory is affected by a potential field in classical mechanics.\n\n\n\n\n\n\nWe can show that a thin lens obeys Fermat’s principle by considering the optical path length for rays passing through different points of the lens. For a thin lens with a biconvex spherical surface of radius \\(R\\), the thickness \\(d(y)\\) varies with the distance \\(y\\) from the optical axis according to:\n\\[d(y) \\approx d_0 - \\frac{y^2}{2R}\\]\nwhere \\(d_0\\) is the thickness at the center. For a converging lens, the thickness decreases as we move away from the optical axis.\nLet’s consider a ray from object point \\(O\\) passing through the lens at height \\(y\\) and reaching the image point \\(I\\). The total optical path length is:\n\\[L(y) = n_1 \\cdot |OP| + n_2 \\cdot d(y) + n_1 \\cdot |PI|\\]\nwhere \\(n_1\\) is the refractive index of the surrounding medium (usually air, \\(n_1 \\approx 1\\)) and \\(n_2\\) is the refractive index of the lens material.\n\n\nCode\n# Set up the figure\nfig, ax = plt.subplots(figsize=get_size(18, 8))\n\n# Define parameters\nf = 2  # focal length\nn_lens = 1.5  # refractive index of lens\nd0 = 0.1  # thickness at center\nobject_distance = 4\nimage_distance = 1/(1/f - 1/object_distance)  # from lens equation\n\n# Function to calculate optical path length through lens at height y\ndef optical_path(y, obj_dist, img_dist, n, d0, f):\n    # Approximate lens thickness at height y\n    d_y = d0 * (1 + y**2/(2*f*d0*(n-1)))\n\n    # Distance from object to lens entry point\n    d1 = np.sqrt(obj_dist**2 + y**2)\n\n    # Distance from lens exit point to image\n    d2 = np.sqrt(img_dist**2 + y**2)\n\n    # Total path length (air + lens + air)\n    return d1 + (n-1)*d_y + d2\n\n# Calculate optical paths for different heights\ny_values = np.linspace(-1.5, 1.5, 30)\npath_lengths = [optical_path(y, object_distance, image_distance, n_lens, d0, f) for y in y_values]\n\n# Find minimum path\nmin_index = np.argmin(path_lengths)\npath_diff = np.array(path_lengths) - min(path_lengths)\n\n# Plot lens shape (exaggerated for visibility)\nlens_width = 0.2\nx_lens = np.linspace(-lens_width/2, lens_width/2, 100)\ny_lens = np.linspace(-2, 2, 100)\nXX, YY = np.meshgrid(x_lens, y_lens)\nlens_shape = d0 + YY**2/(2*f*d0*(n_lens-1))\nlens_shape = lens_shape * lens_width/lens_shape.max()\n\n# Draw lens\nax.fill_between([-lens_shape.max()/2, lens_shape.max()/2], [-2, -2], [2, 2], color='lightblue', alpha=0.3)\nax.plot([-lens_width/4, lens_width/4], [0, 0], 'b-', linewidth=2)  # Optical axis\n\n# Plot object and image points\nax.plot(-object_distance, 0, 'bo', markersize=8, label='object')\nax.plot(image_distance, 0, 'ro', markersize=8, label='image')\n\n# Draw some example rays\nfor i, y in enumerate(y_values[::5]):\n    if i == len(y_values[::5])//2:  # Highlight central ray\n        color = 'green'\n        lw = 2\n        label1 = 'minimal path'\n    else:\n        color = 'gray'\n        lw = 0.8\n        label1 = None\n\n    # Draw ray from object through lens to image\n    ax.plot([-object_distance, 0, image_distance], [0, y, 0], color=color, linewidth=lw, label=label1)\n\n# Plot optical path length vs height - moved to bottom-right corner with more room\nax2 = ax.inset_axes([0.7, 0.75, 0.28, 0.22])  # Adjusted position and size\nax2.plot(y_values, path_diff * 1000, 'k-')  # Convert to mm for visibility\nax2.set_xlabel('height on lens (y)', fontsize=8)\nax2.set_ylabel(r'$\\Delta L$ (mm)', fontsize=8)\nax2.tick_params(axis='both', which='major', labelsize=7)\nax2.grid(True, alpha=0.3)\nax2.axhline(y=0, color='r', linestyle='--', alpha=0.5)\n\n# Set main plot properties\nax.set_xlim(-object_distance*1.1, image_distance*1.1)\nax.set_ylim(-2.5, 2.5)\nax.set_xlabel('position along optical axis')\nax.set_ylabel('height')\nax.axvline(x=0, color='k', linestyle='--', alpha=0.3)  # Mark lens position\n#ax.text(0.5, 2, \"n = \" + str(n_lens))\nax.legend(loc='upper left')  # Moved legend to upper left to avoid overlap\n\nplt.show()\n\n\n\n\n\n\n\n\nFigure 5— Demonstration of Fermat’s principle in a thin lens\n\n\n\n\n\nApplying Fermat’s principle, we require that \\(\\frac{dL}{dy} = 0\\) for the actual ray path. After differentiation and algebraic manipulation, we arrive at:\n\\[\\frac{y}{|OP|} + \\frac{y}{|PI|} = \\frac{y(n_2-n_1)}{R}\\]\nThis is equivalent to the lens maker’s formula when combined with the small-angle approximation. The parabolic thickness profile of the lens ensures that all rays from the object point arrive at the image point with the same optical path length (to first order), satisfying Fermat’s principle.\nThe lens thus acts as a path equalizer - rays taking different paths through the lens all require the same travel time, which creates the focusing effect. This is why a properly designed lens can form a perfect image: it ensures constructive interference of all waves at the image point by making all optical paths equal.",
    "crumbs": [
      "Home",
      "Python Basics",
      "Lecture 1",
      "Theories of Light"
    ]
  },
  {
    "objectID": "lectures/lecture01/01-lecture01.html#ray-optics",
    "href": "lectures/lecture01/01-lecture01.html#ray-optics",
    "title": "Theories of Light",
    "section": "",
    "text": "Ray optics, or geometric optics, provides a powerful framework for understanding light propagation when the wavelength is much smaller than the dimensions of optical elements involved. In this approach, light travels along straight lines called rays in homogeneous media, with well-defined paths that can be mathematically traced. This description serves as the foundation for analyzing many optical systems, from simple mirrors to complex microscopes and telescopes.\nThe cornerstone of ray optics is Fermat’s Principle, which states that light follows the path that minimizes the optical path length or, equivalently, the time of travel between two points. Mathematically, if we consider a path \\(C\\) connecting points A and B, Fermat’s Principle requires:\n\\[\\delta\\int_C n(s)ds = 0\\]\nwhere \\(n(s)\\) is the refractive index along the path and \\(ds\\) is the differential path length. This variational principle leads directly to the laws of reflection and refraction.\n\n\nCode\ndef calculate_path_length(x, start, end):\n    \"\"\"Calculate the total path length from start to point x to end\"\"\"\n    d1 = np.sqrt((x - start[0])**2 + (start[1])**2)\n    d2 = np.sqrt((end[0] - x)**2 + (end[1])**2)\n    return d1 + d2\n\n# Set up the figure\nfig, ax = plt.subplots(figsize=get_size(15, 10))\n\n# Define start and end points\nstart_point = (-4, 3)\nend_point = (4, 3)\n\n# X positions for different possible paths\nx_positions = np.linspace(-3.5, 3.5, 15)\n\n# Calculate path lengths\npath_lengths = [calculate_path_length(x, start_point, end_point) for x in x_positions]\n\n# Find the minimum path (Fermat's principle)\nmin_index = np.argmin(path_lengths)\nmin_x = x_positions[min_index]\n\n# Plot the horizontal line (interface)\nax.axhline(y=0, color='black', linestyle='-', linewidth=1)\n\n# Plot all possible paths\nfor i, x in enumerate(x_positions):\n    if i == min_index:\n        continue  # Skip the minimum path for now\n\n    # Create path\n    verts = [\n        start_point,\n        (x, 0),\n        end_point\n    ]\n    codes = [\n        Path.MOVETO,\n        Path.LINETO,\n        Path.LINETO\n    ]\n    path = Path(verts, codes)\n    patch = patches.PathPatch(path, facecolor='none', edgecolor='gray',\n                             linestyle='--', lw=0.5,alpha=0.65)\n    ax.add_patch(patch)\n\n# Plot the minimum path (Fermat's Principle)\nverts = [\n    start_point,\n    (min_x, 0),\n    end_point\n]\ncodes = [\n    Path.MOVETO,\n    Path.LINETO,\n    Path.LINETO\n]\npath = Path(verts, codes)\npatch = patches.PathPatch(path, facecolor='none', edgecolor='red',\n                         linestyle='-')\nax.add_patch(patch)\n\n# Add dots for the points\nax.plot(start_point[0], start_point[1], 'bo', label='start point')\nax.plot(end_point[0], end_point[1], 'go',  label='end point')\nax.plot(min_x, 0, 'ro',  label='reflection Point')\n\n# Set labels and title\nax.set_xlabel('x-position')\nax.set_ylabel('y-position')\nax.text(-0.7, -1, \"mirror\")\n\n# Set plot limits and legend\nax.set_xlim(-5, 5)\nax.set_ylim(-4, 4)\nax.set_aspect('equal')\nax.legend()\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1— Fermat’s principle for reflection of light at an interface\n\n\n\n\n\nReflection For reflection at a planar interface, we can derive the law of reflection by considering a ray traveling from point A to point B via reflection at point P on a mirror. The total path length is \\(L = |AP| + |PB|\\). According to Fermat’s Principle, the actual path minimizes \\(L\\), so we set:\n\\[\\frac{dL}{dx} = 0\\]\nwhere \\(x\\) is the position of P. After calculus manipulation, this yields the familiar law of reflection:\n\\[\\theta_i = \\theta_r\\]\nwhere \\(\\theta_i\\) is the angle of incidence and \\(\\theta_r\\) is the angle of reflection, both measured from the normal to the surface.\n\n\nCode\ndef calculate_optical_path(x, start, end, n1, n2):\n    \"\"\"Calculate the total optical path length from start to point x to end\"\"\"\n    d1 = n1 * np.sqrt((x - start[0])**2 + (start[1])**2)  # Optical path in medium 1\n    d2 = n2 * np.sqrt((end[0] - x)**2 + (end[1])**2)      # Optical path in medium 2\n    return d1 + d2\n\n# Set up the figure\nfig, ax = plt.subplots(figsize=get_size(15, 10))\n\n# Define start and end points\nstart_point = (-4, 3)\nend_point = (4, -3)\n\n# Define refractive indices\nn1 = 1.0  # Medium 1 (above interface)\nn2 = 1.5  # Medium 2 (below interface)\n\n# X positions for different possible paths\nx_positions = np.linspace(-3.5, 3.5, 15)\n\n# Calculate optical path lengths\noptical_paths = [calculate_optical_path(x, start_point, end_point, n1, n2) for x in x_positions]\n\n# Find the minimum path (Fermat's principle)\nmin_index = np.argmin(optical_paths)\nmin_x = x_positions[min_index]\n\n# Plot the horizontal line (interface)\nax.axhline(y=0, color='black', linestyle='-', linewidth=1)\n\n# Plot all possible paths\nfor i, x in enumerate(x_positions):\n    if i == min_index:\n        continue  # Skip the minimum path for now\n\n    # Create path\n    verts = [\n        start_point,\n        (x, 0),\n        end_point\n    ]\n    codes = [\n        Path.MOVETO,\n        Path.LINETO,\n        Path.LINETO\n    ]\n    path = Path(verts, codes)\n    patch = patches.PathPatch(path, facecolor='none', edgecolor='gray',\n                             linestyle='--', lw=0.5, alpha=0.65)\n    ax.add_patch(patch)\n\n# Plot the minimum path (Fermat's Principle)\nverts = [\n    start_point,\n    (min_x, 0),\n    end_point\n]\ncodes = [\n    Path.MOVETO,\n    Path.LINETO,\n    Path.LINETO\n]\npath = Path(verts, codes)\npatch = patches.PathPatch(path, facecolor='none', edgecolor='red',\n                         linestyle='-', lw=1)\nax.add_patch(patch)\n\n# Add dots for the points\nax.plot(start_point[0], start_point[1], 'bo', label='start')\nax.plot(end_point[0], end_point[1], 'go', label='end')\nax.plot(min_x, 0, 'ro', label='refraction')\n\n# Calculate and draw angles\n# Incident ray\ndx1 = min_x - start_point[0]\ndy1 = 0 - start_point[1]\nincident_angle = np.arctan2(-dy1, dx1)\ntheta1 = np.pi/2 - incident_angle\n\n# Refracted ray\ndx2 = end_point[0] - min_x\ndy2 = end_point[1] - 0\nrefracted_angle = np.arctan2(dy2, dx2)\ntheta2 = np.pi/2 + refracted_angle\n\n# Draw angle arcs\n\n# Add angle labels\nax.text(min_x + 0.3, 0.3, r'$\\theta_1$', color='blue')\nax.text(min_x - 0.5, -0.3, r'$\\theta_2$', color='green')\n\n# Set labels and title\nax.set_xlabel('x-position')\nax.set_ylabel('y-position')\nax.text(-3, 0.5, f\"n₁ = {n1}\", color='blue')\nax.text(-3, -0.5, f\"n₂ = {n2}\", color='green')\n\n# Set plot limits and legend\nax.set_xlim(-5, 5)\nax.set_ylim(-4, 4)\nax.set_aspect('equal')\nax.legend()\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nFigure 2— Snell’s Law from Fermat’s Principle\n\n\n\n\n\n\n\n\n\n\n\nDestructive Interference of Non-Minimal Paths\n\n\n\n\n\nWe can demonstrate that all paths except the shortest one interfere destructively using Feynman’s path integral formulation. In this approach, light takes all possible paths between points A and B, with each path contributing an amplitude with phase \\(e^{iS/\\hbar}\\), where \\(S\\) is the action proportional to the optical path length: \\(S = kL\\) where \\(k = 2\\pi/\\lambda\\) is the wave number.\nTo understand why non-minimal paths cancel out, let’s denote the minimal path as \\(x_0(t)\\) and nearby paths as \\(x_0(t) + \\delta x(t)\\), where \\(\\delta x(t)\\) represents small deviations. The action for these perturbed paths expands as: \\[S[x_0 + \\delta x] = S[x_0] + \\frac{\\delta S}{\\delta x}\\bigg|_{x_0} \\delta x + \\frac{1}{2}\\frac{\\delta^2 S}{\\delta x^2}\\bigg|_{x_0} (\\delta x)^2 + ...\\]\nSince \\(x_0\\) is the extremal path (according to Fermat’s principle), we have \\(\\frac{\\delta S}{\\delta x}\\bigg|_{x_0} = 0\\). This means the first-order term vanishes, leaving the quadratic term as the leading contribution to the phase difference:\n\\[\\Delta\\phi = S[x] - S[x_0] \\approx \\frac{1}{2}\\frac{\\delta^2 S}{\\delta x^2}\\bigg|_{x_0} (\\delta x)^2\\]\nThis quadratic dependence is crucial: as we move away from the minimal path, the phase difference increases as the square of the deviation \\(\\delta x\\). When we consider a specific deviation \\(\\delta x_c\\) where \\(\\Delta\\phi = \\pi\\), paths will contribute with exactly opposite phases compared to the minimal path, leading to destructive interference:\n\\[\\frac{1}{2}\\frac{\\delta^2 S}{\\delta x^2}\\bigg|_{x_0} (\\delta x_c)^2 = \\pi\\]\nFor even larger deviations, the phase differences continue to increase, creating alternating bands of constructive and destructive interference. When summed over all possible paths, these rapidly varying phases cancel each other out.\nFor paths far from the minimal one, the destructive interference is even more pronounced. Mathematically, we can demonstrate this by considering a continuous distribution of paths with optical path lengths \\(L\\). The total amplitude contribution from these paths is given by:\n\\[A = \\int e^{ikL(x)} dx\\]\nFor non-minimal paths, we can parametrize the path length as \\(L(x) = L_0 + \\alpha(x-x_0)^2\\) for some constant \\(\\alpha\\), where \\(x_0\\) corresponds to the minimal path. The amplitude becomes:\n\\[A = \\int e^{ik(L_0 + \\alpha(x-x_0)^2)} dx = e^{ikL_0}\\int e^{ik\\alpha(x-x_0)^2} dx\\]\nThis integral evaluates to:\n\\[A = e^{ikL_0}\\sqrt{\\frac{\\pi}{k\\alpha}}e^{i\\pi/4}\\]\nThe key insight is that the amplitude scales as \\(1/\\sqrt{k\\alpha}\\), which means that as the curvature \\(\\alpha\\) of the path length function increases (as happens far from the minimal path), the contribution to the total amplitude diminishes. This mathematically proves why non-minimal path regions contribute negligibly to the overall path integral.\nThis cancellation mechanism explains why light appears to follow only the path of least time in ray optics. The mathematics shows that constructive interference occurs only for paths very close to the minimal path, while all other paths destructively interfere with their neighbors. This phenomenon emerges naturally from wave properties without requiring quantum mechanical constants like ℏ. We can express this classically by setting \\(S = kL\\) and observing how path differences relative to the wavelength create interference patterns.\n\n\nCode\nfrom matplotlib import cm\n\n# Parameters\nnum_paths = 100\nmin_path_index = num_paths // 2\npath_deviation = np.linspace(-2, 2, num_paths)  # Deviation from minimal path\nalpha = 5  # Curvature parameter controlling phase variation rate\n\n# Calculate phase for each path (quadratic dependence on deviation)\nphases = alpha * path_deviation**2\n\n# Set up the figure\nfig, ax = plt.subplots(figsize=get_size(14, 8))\n\n# Plot phase vs path deviation with a simple blue line and points\nax.plot(path_deviation, phases, '-', color='blue', linewidth=2)\n\n# Highlight the minimal path\nax.axvline(x=0, color='r', linestyle='--', linewidth=2, label='Minimal path')\n\n# Highlight paths near minimal path\nnear_minimal = np.abs(path_deviation) &lt; 0.3\n#ax.scatter(path_deviation[near_minimal], phases[near_minimal],\n#          color='green', s=70, label='Near minimal path', zorder=3)\n\n# Set labels and grid\nax.set_xlabel('path deviation')\nax.set_ylabel('phase [rad]')\n\n\n# Add horizontal lines at multiples of π to show constructive/destructive interference\nfor i in range(int(np.max(phases)/np.pi) + 1):\n    if i == 0:\n        ax.axhline(y=i*np.pi, color='k', linestyle='-', alpha=0.2,\n                  label='Constructive interference')\n    elif i % 2 == 0:\n        ax.axhline(y=i*np.pi, color='k', linestyle='-', alpha=0.2)\n    else:\n        ax.axhline(y=i*np.pi, color='k', linestyle='--', alpha=0.2,\n                  label='Destructive interference' if i==1 else None)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nFigure 3— Visualization of path phases in Fermat’s principle. The figure shows how the phase varies with path deviation from the minimal path (marked by the vertical red line at zero). The quadratic relationship between phase and path deviation demonstrates why paths near the minimal one constructively interfere (similar phases), while non-minimal paths tend to cancel through destructive interference (rapidly varying phases).\n\n\n\n\n\n\n\n\nRefraction Similarly, for refraction between two media with refractive indices \\(n_1\\) and \\(n_2\\), the optical path length is:\n\\[L = n_1|AP| + n_2|PB|\\]\nApplying Fermat’s Principle and solving the resulting equation leads to Snell’s law:\n\\[n_1\\sin\\theta_1 = n_2\\sin\\theta_2\\]\nwhere \\(\\theta_1\\) and \\(\\theta_2\\) are the angles of incidence and refraction, respectively.\nThese fundamental laws allow us to analyze the formation of images by various optical systems. For instance, in a thin lens with focal length \\(f\\), we can establish the relationship between object distance \\(s_o\\), image distance \\(s_i\\), and focal length through the lens equation:\n\\[\\frac{1}{s_o} + \\frac{1}{s_i} = \\frac{1}{f}\\]\nThis equation enables us to predict image formation characteristics in optical instruments such as cameras, microscopes, and telescopes.\nDespite its power, ray optics has limitations. It cannot explain phenomena like diffraction, which occurs when light encounters obstacles or apertures comparable to its wavelength. Here, we need wave optics for a complete description. Additionally, ray optics fails to account for the finite width of beams and the existence of evanescent waves.\n\n\nCode\n# Set up the figure\nfig, ax = plt.subplots(figsize=get_size(18,7))\n\n# Define lens parameters\nf = 2  # focal length\nh_obj = 1.5  # object height\ns_o = 6  # object distance\ns_i = 1/(1/f - 1/s_o)  # image distance from lens formula\nh_img = -h_obj * s_i/s_o  # image height\n\n# Plot optical axis\nax.axhline(y=0, color='black', linestyle='-')\n\n# Plot lens\nlens_height = 3\nax.plot([0, 0], [-lens_height/2, lens_height/2], 'k-')\n# Add curved edges to represent a lens\ncurve_x = np.linspace(-0.1, 0, 20)\ncurve_y1 = lens_height/2 * np.sqrt(1 - (curve_x/0.1)**2)\ncurve_y2 = -lens_height/2 * np.sqrt(1 - (curve_x/0.1)**2)\nax.plot(curve_x, curve_y1, 'k-')\nax.plot(curve_x, curve_y2, 'k-')\n\n# Plot focal points\nax.plot(f, 0, 'ko', markersize=4)\nax.plot(-f, 0, 'ko', markersize=4)\nax.text(f, -0.4, r'$F$', fontsize=10)\nax.text(-f, -0.4, r\"$F'$\", fontsize=10)\n\n# Plot object and image\nax.arrow(-s_o, 0, 0, h_obj-0.1, head_width=0.1, head_length=0.1, fc='blue', ec='blue')\nax.arrow(s_i, 0, 0, h_img+0.1, head_width=0.1, head_length=0.1, fc='red', ec='red')\nax.text(-s_o+0.1, h_obj/2, r'object', color='blue', fontsize=9)\nax.text(s_i+0.1, h_img/2, r'image', color='red', fontsize=9)\n\n# Principal rays\n# Ray 1: Parallel to axis, through focal point\nax.plot([-s_o, 0], [h_obj, h_obj], 'b-', label='parallel to axis → through F')\nax.plot([0, s_i], [h_obj, h_img], 'b-')\n\n# Ray 2: Through center, unchanged direction\nax.plot([-s_o, s_i], [h_obj, h_img], 'g-',  label='through center')\n\n# Ray 3: Through focal point, parallel to axis\nax.plot([-s_o, 0], [h_obj, 0], 'r-', label='through F → parallel to axis')\nax.plot([0, s_i], [0, h_img], 'r-')\n\n# Add lens equation\nequation_text = r\"$\\frac{1}{s_o} + \\frac{1}{s_i} = \\frac{1}{f}$\"\nax.text(-5, -1.5, equation_text, fontsize=14, bbox=dict(facecolor='white', lw=0,\n    alpha=0.7))\n\n# Labels showing values\nax.text(-s_o/2, 0.2, f\"$s_o = {s_o}$\")\nax.text(s_i/2, 0.4, f\"$s_i = {s_i:.2f}$\")\nax.text(0, -2, f\"$f = {f}$\")\n\n# Set plot limits and aspect ratio\nax.set_xlim(-s_o-1, s_i+1)\nax.set_ylim(-2.5, 2.5)\n#ax.set_aspect('equal')\n\n# Axis labels\nax.set_xlabel('position')\nax.set_ylabel('height')\n\n# Add legend for principal rays\n#ax.legend(loc='upper center', bbox_to_anchor=(0.5, -0.15), ncol=3, fontsize=8)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nFigure 4— Ray diagram for a thin lens showing object and image formation\n\n\n\n\n\n\n\n\nWhile we’ve discussed Fermat’s principle in its integral form, it can also be expressed as a differential equation that describes the path of light rays. This approach reveals how ray trajectories emerge from the underlying variational principle.\nStarting with Fermat’s principle that light follows the path of least optical path length:\n\\[\\delta\\int_C n(s)ds = 0\\]\nWe can derive the differential equation governing the ray path. If we parametrize the ray path as \\(\\mathbf{r}(s)\\) where \\(s\\) is the arc length, then the ray equation becomes:\n\\[\\frac{d}{ds}\\left(n\\frac{d\\mathbf{r}}{ds}\\right) = \\nabla n\\]\nThis equation states that the rate of change of the momentum vector (\\(n\\frac{d\\mathbf{r}}{ds}\\)) equals the gradient of the refractive index. In a medium with constant refractive index (\\(\\nabla n = 0\\)), this simplifies to:\n\\[\\frac{d^2\\mathbf{r}}{ds^2} = 0\\]\nThis confirms that light rays follow straight lines in homogeneous media.\nFor a medium with a continuously varying refractive index \\(n(x,y,z)\\), the ray equation becomes:\n\\[\\frac{d}{ds}\\left(n\\frac{d\\mathbf{r}}{ds}\\right) = \\nabla n\\]\nThis differential form of Fermat’s principle is particularly useful in gradient-index optics, where the refractive index changes continuously throughout the medium, causing light rays to follow curved paths. Examples include optical fibers with graded-index profiles and the atmosphere where temperature gradients create mirages.\n\n\n\n\n\n\nDeriving the Differential Form from the Integral Principle\n\n\n\n\n\nTo derive the differential ray equation from Fermat’s integral principle, we apply the calculus of variations. Starting with the optical path length functional:\n\\[L = \\int_C n(s)ds = \\int_{t_1}^{t_2} n(\\mathbf{r}(t)) \\left|\\frac{d\\mathbf{r}}{dt}\\right| dt\\]\nWhere \\(\\mathbf{r}(t)\\) parametrizes the path. The term \\(\\left|\\frac{d\\mathbf{r}}{dt}\\right|\\) represents the differential element of arc length \\(ds\\) along the path, so \\(ds = \\left|\\frac{d\\mathbf{r}}{dt}\\right| dt\\). This parametrization allows us to convert the path integral over the curve \\(C\\) into a definite integral over the parameter \\(t\\). According to Fermat’s principle, the true path makes this integral stationary (δL = 0).\nConsider a small variation in the path: \\(\\mathbf{r}(t) \\rightarrow \\mathbf{r}(t) + \\epsilon\\mathbf{\\eta}(t)\\) where \\(\\mathbf{\\eta}(t_1) = \\mathbf{\\eta}(t_2) = 0\\) (fixed endpoints). Expanding the variation of the integral to first order in ε:\n\\[\\delta L = \\frac{d}{d\\epsilon}\\bigg|_{\\epsilon=0} \\int_{t_1}^{t_2} n(\\mathbf{r}(t) + \\epsilon\\mathbf{\\eta}(t)) \\left|\\frac{d}{dt}(\\mathbf{r}(t) + \\epsilon\\mathbf{\\eta}(t))\\right| dt\\]\nUsing the chain rule and reparametrizing with arc length \\(s\\) (where \\(\\frac{d\\mathbf{r}}{ds}\\) is a unit vector), the stationarity condition leads to:\n\\[\\int_C \\left[ \\nabla n \\cdot \\mathbf{\\eta} - \\frac{d}{ds}\\left(n\\frac{d\\mathbf{r}}{ds}\\right) \\cdot \\mathbf{\\eta} \\right] ds = 0\\]\nSince this must hold for any variation \\(\\mathbf{\\eta}\\), we obtain the Euler-Lagrange equation:\n\\[\\frac{d}{ds}\\left(n\\frac{d\\mathbf{r}}{ds}\\right) = \\nabla n\\]\nThis is the ray equation in differential form. It shows that rays bend toward regions of higher refractive index, directly analogous to how a mechanical particle’s trajectory is affected by a potential field in classical mechanics.\n\n\n\n\n\n\nWe can show that a thin lens obeys Fermat’s principle by considering the optical path length for rays passing through different points of the lens. For a thin lens with a biconvex spherical surface of radius \\(R\\), the thickness \\(d(y)\\) varies with the distance \\(y\\) from the optical axis according to:\n\\[d(y) \\approx d_0 - \\frac{y^2}{2R}\\]\nwhere \\(d_0\\) is the thickness at the center. For a converging lens, the thickness decreases as we move away from the optical axis.\nLet’s consider a ray from object point \\(O\\) passing through the lens at height \\(y\\) and reaching the image point \\(I\\). The total optical path length is:\n\\[L(y) = n_1 \\cdot |OP| + n_2 \\cdot d(y) + n_1 \\cdot |PI|\\]\nwhere \\(n_1\\) is the refractive index of the surrounding medium (usually air, \\(n_1 \\approx 1\\)) and \\(n_2\\) is the refractive index of the lens material.\n\n\nCode\n# Set up the figure\nfig, ax = plt.subplots(figsize=get_size(18, 8))\n\n# Define parameters\nf = 2  # focal length\nn_lens = 1.5  # refractive index of lens\nd0 = 0.1  # thickness at center\nobject_distance = 4\nimage_distance = 1/(1/f - 1/object_distance)  # from lens equation\n\n# Function to calculate optical path length through lens at height y\ndef optical_path(y, obj_dist, img_dist, n, d0, f):\n    # Approximate lens thickness at height y\n    d_y = d0 * (1 + y**2/(2*f*d0*(n-1)))\n\n    # Distance from object to lens entry point\n    d1 = np.sqrt(obj_dist**2 + y**2)\n\n    # Distance from lens exit point to image\n    d2 = np.sqrt(img_dist**2 + y**2)\n\n    # Total path length (air + lens + air)\n    return d1 + (n-1)*d_y + d2\n\n# Calculate optical paths for different heights\ny_values = np.linspace(-1.5, 1.5, 30)\npath_lengths = [optical_path(y, object_distance, image_distance, n_lens, d0, f) for y in y_values]\n\n# Find minimum path\nmin_index = np.argmin(path_lengths)\npath_diff = np.array(path_lengths) - min(path_lengths)\n\n# Plot lens shape (exaggerated for visibility)\nlens_width = 0.2\nx_lens = np.linspace(-lens_width/2, lens_width/2, 100)\ny_lens = np.linspace(-2, 2, 100)\nXX, YY = np.meshgrid(x_lens, y_lens)\nlens_shape = d0 + YY**2/(2*f*d0*(n_lens-1))\nlens_shape = lens_shape * lens_width/lens_shape.max()\n\n# Draw lens\nax.fill_between([-lens_shape.max()/2, lens_shape.max()/2], [-2, -2], [2, 2], color='lightblue', alpha=0.3)\nax.plot([-lens_width/4, lens_width/4], [0, 0], 'b-', linewidth=2)  # Optical axis\n\n# Plot object and image points\nax.plot(-object_distance, 0, 'bo', markersize=8, label='object')\nax.plot(image_distance, 0, 'ro', markersize=8, label='image')\n\n# Draw some example rays\nfor i, y in enumerate(y_values[::5]):\n    if i == len(y_values[::5])//2:  # Highlight central ray\n        color = 'green'\n        lw = 2\n        label1 = 'minimal path'\n    else:\n        color = 'gray'\n        lw = 0.8\n        label1 = None\n\n    # Draw ray from object through lens to image\n    ax.plot([-object_distance, 0, image_distance], [0, y, 0], color=color, linewidth=lw, label=label1)\n\n# Plot optical path length vs height - moved to bottom-right corner with more room\nax2 = ax.inset_axes([0.7, 0.75, 0.28, 0.22])  # Adjusted position and size\nax2.plot(y_values, path_diff * 1000, 'k-')  # Convert to mm for visibility\nax2.set_xlabel('height on lens (y)', fontsize=8)\nax2.set_ylabel(r'$\\Delta L$ (mm)', fontsize=8)\nax2.tick_params(axis='both', which='major', labelsize=7)\nax2.grid(True, alpha=0.3)\nax2.axhline(y=0, color='r', linestyle='--', alpha=0.5)\n\n# Set main plot properties\nax.set_xlim(-object_distance*1.1, image_distance*1.1)\nax.set_ylim(-2.5, 2.5)\nax.set_xlabel('position along optical axis')\nax.set_ylabel('height')\nax.axvline(x=0, color='k', linestyle='--', alpha=0.3)  # Mark lens position\n#ax.text(0.5, 2, \"n = \" + str(n_lens))\nax.legend(loc='upper left')  # Moved legend to upper left to avoid overlap\n\nplt.show()\n\n\n\n\n\n\n\n\nFigure 5— Demonstration of Fermat’s principle in a thin lens\n\n\n\n\n\nApplying Fermat’s principle, we require that \\(\\frac{dL}{dy} = 0\\) for the actual ray path. After differentiation and algebraic manipulation, we arrive at:\n\\[\\frac{y}{|OP|} + \\frac{y}{|PI|} = \\frac{y(n_2-n_1)}{R}\\]\nThis is equivalent to the lens maker’s formula when combined with the small-angle approximation. The parabolic thickness profile of the lens ensures that all rays from the object point arrive at the image point with the same optical path length (to first order), satisfying Fermat’s principle.\nThe lens thus acts as a path equalizer - rays taking different paths through the lens all require the same travel time, which creates the focusing effect. This is why a properly designed lens can form a perfect image: it ensures constructive interference of all waves at the image point by making all optical paths equal.",
    "crumbs": [
      "Home",
      "Python Basics",
      "Lecture 1",
      "Theories of Light"
    ]
  },
  {
    "objectID": "lectures/lecture01/01-lecture01.html#wave-optics",
    "href": "lectures/lecture01/01-lecture01.html#wave-optics",
    "title": "Theories of Light",
    "section": "Wave Optics",
    "text": "Wave Optics",
    "crumbs": [
      "Home",
      "Python Basics",
      "Lecture 1",
      "Theories of Light"
    ]
  }
]